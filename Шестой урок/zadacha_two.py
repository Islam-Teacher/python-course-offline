# Итерации по спискам
# Обход матрицы вещественных чисел

# Задана матрица размером 3*4
M = [
    [ 5.2, 2.8, 1.1, 4.4 ],
    [ 0.8, 2.3, 8.4, 5.0 ],
    [ 1.1, 3.2, 5.5, 1.0 ],
    ]

# вычисление суммы элементов матрицы, 
# значение которых больше 5.0

#Написать функцию season, принимающую 1 аргумент — 
#номер месяца (от 1 до 12), и возвращающую время года,
#которому этот 
#месяц принадлежит (зима, весна, лето или осень).

# Создание таблицы с размером 3x3, заполненной двойками









a = 3
mas = [[2] * a for i in range(a)]
print(mas) # Выведет [[2, 2, 2], [2, 2, 2], [2, 2, 2]]   



#Дан список со строками, содержащими целые числа:
    #['1', '2', '3', '4', '5']
#Преобразуйте элементы этого списка в числа:
    #[1, 2, 3, 4, 5]







b = ['1', '2', '3', '4', '5']
h = []
for s in b:
    h.append(int(s))
print(h)
    
#С помощью цикла заполните список четными 
# числами из промежутка от 1 до 100.



v=[]
for d in range(1,100):
    v.append(int(d))
    print(v)
    
    
    
    
#Дана строка с буквами и цифрами. 
#Узнайте сколько цифр в строке.




def count_digits(s):
    count = 0
    for char in s:
        if char.isdigit():
            count += 1  
    return count

input_str = 'Hello 12312world'
print(count_digits(input_str))




#Дан список со строками. 
#Оставьте в этом списке только те строки, 
#которые начинаются на http://.


# Напишите функцию amountList, 
# которая возвращает сумму всех элементов списка.


def amountList(lst):
    amount = 0
    for x in lst:
        amount += x
    return amount

print(amountList([1, 2, 3]))

mylist = [1, 2, 4, 8, 16]
s = amountList(mylist)

print(f'Сумма списка {mylist} равна {s}')




# Напишите функцию fact, вычисляющую значение факториала числа N.
# Факториал числа - это произведение всех чисел от 1 до N.
# Например, факториал числа 5 равен 120 (5! = 120).



def fact(n):
    result = 1
    while n > 1:
        result *= n
        n -= 1
    return result

print(fact(2))
print(fact(3))
print(fact(4))
print(fact(5))
